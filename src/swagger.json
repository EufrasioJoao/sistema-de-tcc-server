{
  "openapi": "3.0.3",
  "info": {
    "title": "Arquivar: Operator API",
    "description": "Arquivar Operator API",
    "termsOfService": "https://arquivar.com/terms/",
    "contact": {
      "email": "richardthindwajunior@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://arquivaroperatorapi-production.up.railway.app/api",
      "description": "API de teste no railway"
    },
    {
      "url": "http://localhost:5003/api",
      "description": "API de teste no localhost"
    }
  ],
  "tags": [
    {
      "name": "operators",
      "description": "Operations about operators"
    },
    {
      "name": "plans",
      "description": "Operations about plans"
    },
    {
      "name": "users",
      "description": "Operations about users"
    },
    {
      "name": "entities",
      "description": "Operations about entities"
    },
    {
      "name": "folders",
      "description": "Operations about folders"
    },
    {
      "name": "files",
      "description": "Operations about files"
    },
    {
      "name": "payments",
      "description": "Operations about payments"
    }
  ],
  "paths": {
    "/operators/login": {
      "post": {
        "tags": ["operators"],
        "summary": "Login an operator",
        "description": "Login an operator",
        "operationId": "loginOperator",
        "requestBody": {
          "description": "Login an operator",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": ["email", "password"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/operators/register": {
      "post": {
        "tags": ["operators"],
        "description": "Register a new operator",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Login an operator",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone_number": {
                    "type": "string"
                  }
                },
                "required": ["first_name", "last_name", "email"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/operators/set-new-password": {
      "post": {
        "tags": ["operators"],
        "description": "Register a new operator",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Login an operator",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "operatorId": {
                    "type": "number"
                  }
                },
                "required": ["operatorId"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/operators/{id}": {
      "put": {
        "tags": ["operators"],
        "description": "Register a new operator",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID do operador a ser atualizado",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Update an operator",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string",
                    "example": "Richard"
                  },
                  "last_name": {
                    "type": "string",
                    "example": "Pieter"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "rp@arquivar.co.mz"
                  },
                  "phone_number": {
                    "type": "string",
                    "example": "1234567890"
                  },
                  "old_password": {
                    "type": "string",
                    "example": "password",
                    "minLength": 8
                  },
                  "new_password": {
                    "type": "string",
                    "example": "password",
                    "minLength": 8
                  },
                  "is_active": {
                    "type": "boolean",
                    "example": true
                  },
                  "profile_photo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": ["operators"],
        "description": "Get a operator",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID do operador",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": ["operators"],
        "description": "delete a operator",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID do operador",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/operators": {
      "get": {
        "tags": ["operators"],
        "description": "List all operators",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/operators/{id}/with-history": {
      "get": {
        "tags": ["operators"],
        "description": "Gets operator data with its history",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/operators/history": {
      "post": {
        "tags": ["operators"],
        "description": "Gets operators history",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/plans/create": {
      "post": {
        "summary": "Create plan",
        "description": "Cria um novo plano.",
        "tags": ["plans"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Nome do plano.",
                    "example": "Basic"
                  },
                  "totalUsersPermitted": {
                    "type": "integer",
                    "description": "Número total de usuários permitidos.",
                    "example": 3
                  },
                  "price": {
                    "type": "number",
                    "format": "float",
                    "description": "Preço do plano.",
                    "example": 10000
                  },
                  "description": {
                    "type": "string",
                    "description": "Descrição do plano.",
                    "example": "Plano destinado a pequenas e médias empresas"
                  },
                  "features": {
                    "type": "object",
                    "description": "Features do plano.",
                    "example": ["Feature 1", "Feature 2", "Feature 3"]
                  },
                  "popular": {
                    "type": "boolean",
                    "description": "Indica se o plano é popular ou não",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Plano criado com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/plans": {
      "get": {
        "summary": "List Plans",
        "description": "Lista todos os planos disponíveis.",
        "tags": ["plans"],
        "responses": {
          "200": {
            "description": "Lista de planos retornada com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          }
        }
      }
    },
    "/plans/{id}": {
      "get": {
        "summary": "Show a especific plan",
        "description": "Show a especific plan by ID.",
        "tags": ["plans"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do plano a ser mostrado",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plano encontrado!"
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Plano não encontrado."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Update plan",
        "description": "Atualiza um plano específico pelo ID.",
        "tags": ["plans"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do plano a ser atualizado",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Nome do plano.",
                    "example": "Smaller"
                  },
                  "totalUsersPermitted": {
                    "type": "integer",
                    "description": "Número total de usuários permitidos.",
                    "example": 4
                  },
                  "price": {
                    "type": "number",
                    "format": "float",
                    "description": "Preço do plano.",
                    "example": 3400
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Plano atualizado com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Plano não encontrado."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete organization",
        "description": "Deleta um plano específico pelo ID.",
        "tags": ["plans"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do plano a ser deletado",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plano deletado com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Plano não encontrado."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/entities": {
      "get": {
        "summary": "List entities",
        "description": "Lista todas as entidades disponíveis.",
        "tags": ["entities"],
        "responses": {
          "200": {
            "description": "Lista de entidades retornada com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/entities/create": {
      "post": {
        "summary": "Create organization",
        "description": "Cria uma nova entidade.",
        "tags": ["entities"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organization": {
                    "type": "object",
                    "properties": {
                      "organizationName": {
                        "type": "string",
                        "example": "Green Tech"
                      },
                      "organizationEmail": {
                        "type": "string",
                        "example": "info@gt.com"
                      },
                      "organizationNuit": {
                        "type": "string",
                        "example": "11223344"
                      },
                      "organizationPhoneNumber": {
                        "type": "string",
                        "example": "11221133224"
                      },
                      "planId": {
                        "type": "integer",
                        "example": 4
                      }
                    }
                  },
                  "organizationAdmin": {
                    "type": "object",
                    "properties": {
                      "organizationAdminFirstName": {
                        "type": "string",
                        "example": "Adamai"
                      },
                      "organizationAdminLastName": {
                        "type": "string",
                        "example": "Roseiro"
                      },
                      "organizationAdminEmail": {
                        "type": "string",
                        "example": "adamai@gt.com"
                      },
                      "organizationAdminPhoneNumber": {
                        "type": "string",
                        "example": "32423243242"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Entidade criada com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/entities/{organizationId}/activate": {
      "put": {
        "summary": "Activate organization",
        "description": "Activa uma instituição",
        "tags": ["entities"],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "ID da entidade.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entidade ativada com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/entities/{organizationId}/deactivate": {
      "put": {
        "summary": "Deactivate organization",
        "description": "Desactiva uma instituição",
        "tags": ["entities"],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "ID da entidade.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entidade ativada com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/entities/{id}": {
      "get": {
        "summary": "Get organization",
        "description": "Busca uma entidade específica pelo ID.",
        "tags": ["entities"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da entidade a ser buscada",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entidade encontrada com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Entidade não encontrada."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Update organization",
        "description": "Atualiza uma entidade específica pelo ID.",
        "tags": ["entities"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da entidade a ser atualizada",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Operational Incorp"
                  },
                  "email": {
                    "type": "string",
                    "example": "info@opinc.com"
                  },
                  "nuit": {
                    "type": "string",
                    "example": "2323c1a2m23"
                  },
                  "phone_number": {
                    "type": "string",
                    "example": "12a2c121m21"
                  },
                  "plan_id": {
                    "type": "integer",
                    "example": 2
                  },
                  "is_active": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entidade atualizada com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Entidade não encontrada."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete organization",
        "description": "Deleta uma entidade específica pelo ID.",
        "tags": ["entities"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da entidade a ser deletada",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entidade deletada com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Entidade não encontrada."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/folders/create": {
      "post": {
        "summary": "Create folder",
        "description": "Cria uma nova pasta.",
        "tags": ["folders"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Nome da pasta.",
                    "example": "Aduaneiro"
                  },
                  "parent_folder_id": {
                    "type": "string",
                    "description": "ID da pasta pai.",
                    "example": "83355f07-5e30-4567-a072-ea3d931e68ed - (opcional)"
                  },
                  "organization_id": {
                    "type": "integer",
                    "description": "ID da entidade.",
                    "example": 1
                  }
                },
                "required": ["name", "organization_id"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pasta criada com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/folders": {
      "get": {
        "summary": "List all folders",
        "description": "Lista todas as pastas.",
        "tags": ["folders"],
        "responses": {
          "200": {
            "description": "Lista de pastas retornada com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/folders/organization/{organization_id}": {
      "get": {
        "summary": "List all organization folders",
        "description": "Lista todas as pastas de uma entidade específica.",
        "tags": ["folders"],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "ID da entidade.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de pastas da entidade retornada com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/folders/folder/{id}": {
      "get": {
        "summary": "Get folder content",
        "description": "Obtém o conteúdo de uma pasta específica (subpastas e arquivos).",
        "tags": ["folders"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da pasta.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Conteúdo da pasta retornado com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Pasta não encontrada."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/folders/{id}": {
      "get": {
        "summary": "Get folder",
        "description": "Obtém os detalhes de uma pasta específica.",
        "tags": ["folders"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da pasta.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pasta encontrada com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Pasta não encontrada."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete folder",
        "description": "Deleta uma pasta específica.",
        "tags": ["folders"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da pasta a ser deletada.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pasta deletada com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Pasta não encontrada."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Rename folder",
        "description": "Renomeia uma pasta específica.",
        "tags": ["folders"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da pasta a ser renomeada.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Novo nome da pasta.",
                    "example": "2022"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pasta renomeada com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Pasta não encontrada."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/folders/organization/{organization_id}/folder/{id}/search/{query}": {
      "get": {
        "summary": "Search for folder content",
        "description": "Pesquisa o conteúdo de uma pasta específica.",
        "tags": ["folders"],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "ID da entidade.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID da pasta.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "path",
            "description": "Termo de pesquisa.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Conteúdo da pasta encontrado com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Pasta não encontrada."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/files/upload/{folderId}": {
      "post": {
        "summary": "Upload files to folder",
        "description": "Faz o upload de arquivos para uma pasta específica identificada pelo ID.",
        "tags": ["files"],
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "ID da pasta onde os arquivos serão carregados.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "Arquivos a serem carregados."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Arquivos carregados com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/files": {
      "get": {
        "summary": "List All Files",
        "description": "Lista todos os arquivos disponíveis.",
        "tags": ["files"],
        "responses": {
          "200": {
            "description": "Lista de arquivos retornada com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/files/{fileId}": {
      "get": {
        "summary": "Get File by ID",
        "description": "Obtém um arquivo específico pelo seu ID.",
        "tags": ["files"],
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "ID do arquivo a ser recuperado.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arquivo retornado com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Arquivo não encontrado."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete file",
        "description": "Deleta um arquivo específico pelo seu ID.",
        "tags": ["files"],
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "ID do arquivo a ser deletado.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arquivo deletado com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Arquivo não encontrado."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/payments/new": {
      "post": {
        "summary": "Generate Payment",
        "description": "Gera um novo pagamento.",
        "tags": ["payments"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organizationId": {
                    "type": "string",
                    "description": "ID da entidade para gerar o pagamento.",
                    "example": "1"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pagamento gerado com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/payments/confirm": {
      "post": {
        "summary": "Confirm Payment",
        "description": "Confirma um pagamento existente.",
        "tags": ["payments"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "paymentId": {
                    "type": "string",
                    "description": "ID do pagamento a ser confirmado.",
                    "example": "30"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pagamento confirmado com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/payments": {
      "get": {
        "summary": "List All Payments",
        "description": "Lista todos os pagamentos.",
        "tags": ["payments"],
        "responses": {
          "200": {
            "description": "Lista de pagamentos retornada com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/payments/organization/{organizationId}": {
      "get": {
        "summary": "List organization Payments",
        "description": "Lista os pagamentos de uma entidade específica.",
        "tags": ["payments"],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "ID da entidade para listar os pagamentos.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de pagamentos da entidade retornada com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/payments/{id}": {
      "get": {
        "summary": "Get Payment",
        "description": "Obtém detalhes de um pagamento específico.",
        "tags": ["payments"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do pagamento a ser obtido.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detalhes do pagamento retornados com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Pagamento não encontrado."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Cancel Payment",
        "description": "Cancela um pagamento específico.",
        "tags": ["payments"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do pagamento a ser cancelado.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pagamento cancelado com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Pagamento não encontrado."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Operator": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "first_name": {
            "type": "string",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "example": "Doe"
          },
          "profile_photo": {
            "type": "string",
            "example": "profile.jpg"
          },
          "email": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "phone_number": {
            "type": "string",
            "example": "+123456789"
          },
          "is_admin": {
            "type": "boolean",
            "example": false
          },
          "password": {
            "type": "string",
            "example": "password123"
          },
          "role": {
            "type": "string",
            "example": "OPERATOR"
          },
          "is_active": {
            "type": "boolean",
            "example": true
          },
          "last_login_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-10T12:00:00Z"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-01T12:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-10T12:00:00Z"
          }
        },
        "xml": {
          "name": "operator"
        }
      },
      "organization": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "code": {
            "type": "string",
            "example": "organization001"
          },
          "name": {
            "type": "string",
            "example": "organization Example"
          },
          "email": {
            "type": "string",
            "example": "organization@example.com"
          },
          "nuit": {
            "type": "string",
            "example": "123456789"
          },
          "phone_number": {
            "type": "string",
            "example": "+987654321"
          },
          "main_user_id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "plan_id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "nextPaymentDate": {
            "type": "string",
            "format": "date-time",
            "example": "2025-02-01T00:00:00Z"
          },
          "is_active": {
            "type": "boolean",
            "example": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-01T12:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-10T12:00:00Z"
          }
        },
        "xml": {
          "name": "organization"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "first_name": {
            "type": "string",
            "example": "Jane"
          },
          "last_name": {
            "type": "string",
            "example": "Smith"
          },
          "profile_photo": {
            "type": "string",
            "example": "profile.jpg"
          },
          "email": {
            "type": "string",
            "example": "jane.smith@example.com"
          },
          "phone_number": {
            "type": "string",
            "example": "+987654321"
          },
          "is_admin": {
            "type": "boolean",
            "example": false
          },
          "password": {
            "type": "string",
            "example": "password123"
          },
          "role": {
            "type": "string",
            "example": "EMPLOYEE"
          },
          "is_active": {
            "type": "boolean",
            "example": true
          },
          "last_login_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-10T12:00:00Z"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-01T12:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-10T12:00:00Z"
          }
        },
        "xml": {
          "name": "user"
        }
      },
      "Plan": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Basic Plan"
          },
          "totalUsersPermitted": {
            "type": "integer",
            "example": 100
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 29.99
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-01T12:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-10T12:00:00Z"
          }
        },
        "xml": {
          "name": "plan"
        }
      },
      "Folder": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "abc123"
          },
          "name": {
            "type": "string",
            "example": "Documents"
          },
          "path": {
            "type": "string",
            "example": "/user/docs"
          },
          "parent_folder_id": {
            "type": "string",
            "example": "xyz789"
          },
          "organization_id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-01T12:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-10T12:00:00Z"
          }
        },
        "xml": {
          "name": "folder"
        }
      },
      "File": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "file123"
          },
          "filename": {
            "type": "string",
            "example": "document.pdf"
          },
          "path": {
            "type": "string",
            "example": "/user/docs/document.pdf"
          },
          "uploaded_by": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "organization_id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "folder_id": {
            "type": "string",
            "example": "folder123"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-01T12:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-10T12:00:00Z"
          }
        },
        "xml": {
          "name": "file"
        }
      },
      "Payment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "organization_id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "amount": {
            "type": "number",
            "format": "float",
            "example": 100.5
          },
          "due_date": {
            "type": "string",
            "format": "date-time",
            "example": "2025-02-01T00:00:00Z"
          },
          "status": {
            "type": "string",
            "example": "pending"
          },
          "penalty": {
            "type": "number",
            "format": "float",
            "example": 0.0
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-01T12:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-10T12:00:00Z"
          }
        },
        "xml": {
          "name": "payment"
        }
      }
    },
    "requestBodies": {},
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
